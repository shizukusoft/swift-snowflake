name: Docs

on:
  push:
    paths:
      - '.github/workflows/docs.yml'
      - '**/*.swift'
  pull_request:
    paths:
      - '.github/workflows/docs.yml'
      - '**/*.swift'

jobs:
  build:
    runs-on: macos-12
    env:
      XCODE_VERSION: '13.4.1'
      SWIFT_VERSION: '5.6.2'
      ARTIFACT_PATH: '_site/'
    steps:
      - uses: actions/checkout@v3
      - uses: sinoru/actions-setup-xcode@v2
        if: ${{ startsWith(runner.os, 'macOS') && env.XCODE_VERSION }}
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
          apple-id: ${{ secrets.APPLE_ID }}
          apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
      - uses: sinoru/actions-setup-swift@v2
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: .build
          key: ${{ runner.os }}-swift-${{ env.SWIFT_VERSION }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swift-${{ env.SWIFT_VERSION }}-
            ${{ runner.os }}-swift-
      - name: Run `swift package resolve`
        run: swift package resolve
      - name: Run `mkdir ${{ env.ARTIFACT_PATH }}`
        run: mkdir "${{ env.ARTIFACT_PATH }}"
      - name: Run `swift package generate-documentation`
        run: |
          swift package --allow-writing-to-directory "${{ env.ARTIFACT_PATH }}Snowflake" \
            generate-documentation --target Snowflake \
            --output-path "${{ env.ARTIFACT_PATH }}Snowflake" \
            --transform-for-static-hosting \
            --hosting-base-path swift-snowflake/Snowflake

          swift package --allow-writing-to-directory "${{ env.ARTIFACT_PATH }}SnowflakeFoundationCompat" \
            generate-documentation --target Snowflake \
            --output-path "${{ env.ARTIFACT_PATH }}SnowflakeFoundationCompat" \
            --transform-for-static-hosting \
            --hosting-base-path swift-snowflake/SnowflakeFoundationCompat
      - name: Run `tar`
        run: |
          tar \
          --directory ${{ env.ARTIFACT_PATH }} \
          -cvf ${{ runner.temp }}/artifact.tar \
          --exclude=.git \
          --exclude=.github \
          .
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
